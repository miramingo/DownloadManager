/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.io.IOException;
import java.net.ConnectException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.time.Instant;
import java.util.logging.Level;
import java.util.logging.Logger;
import util.Handler;
import util.HttpReturn;
import util.Main;

/**
 *
 * @author julfikar
 */
public class MainView extends javax.swing.JFrame {
    
    private String LINK;

    public HttpReturn httpReturn;
    public Exception exception;

    public boolean _downloadFinished;
    public boolean _chunkDownloadFinished;

    public long _downloadedCounter;
    public long _time;
    public long _chunkSizeChanging;
    public long _percentage;

    public Instant _thisInstant;

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        
        img_loading.setVisible(false);
        
        httpReturn = new HttpReturn(0,-1);
        exception = null;

        _downloadFinished = false;
        _chunkDownloadFinished = false;

        _downloadedCounter = 0;
        _time = 0;
        _chunkSizeChanging = 0;
    }
    public void progress(){
        
        long _contentSize = httpReturn._contentLength;
        double _percent = ((double)_downloadedCounter/(double)_contentSize)*100;
        _percent = (double) ((int)Math.round(_percent*100))/100;

        Instant now = Instant.now();
        long timeElapsed = Duration.between(now, _thisInstant).getNano();
        double time = (double)timeElapsed;

        double downloadSeed = 0;
        if (time != 0){
            downloadSeed = ((double)(_downloadedCounter/_chunkSizeChanging) * (time / 1000000000));
        }

        String speed =  Handler.convertToUOM(downloadSeed) + "/s";

        String done = new String(new char[(int) _percent]).replace("\0", ".");
        String undone = new String(new char[100 - (int) _percent]).replace("\0", " ");
//        System.out.print("\r[" + done + undone + "] " + String.valueOf(_percent)
//                + "% " + speed);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_download = new javax.swing.JButton();
        lbl_status = new javax.swing.JLabel();
        txt_link = new javax.swing.JTextField();
        img_loading = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Developed by stupid");
        setAlwaysOnTop(true);
        setBounds(new java.awt.Rectangle(0, 0, 673, 228));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(673, 228));
        setMinimumSize(new java.awt.Dimension(673, 228));
        setResizable(false);

        jPanel1.setForeground(new java.awt.Color(241, 234, 234));

        btn_download.setText("start downloading");
        btn_download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_downloadActionPerformed(evt);
            }
        });

        txt_link.setToolTipText("Download link here");

        img_loading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/ajax-loader.gif"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setText("Download Manager (Easy and Simple)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_download)
                        .addGap(263, 263, 263))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_link, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(img_loading)
                .addGap(271, 271, 271))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txt_link, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(img_loading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_status)
                .addGap(18, 18, 18)
                .addComponent(btn_download)
                .addGap(42, 42, 42))
        );

        btn_download.getAccessibleContext().setAccessibleName("btn_download");
        lbl_status.getAccessibleContext().setAccessibleName("lbl_status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private HttpReturn checkURL(URL url) throws ConnectException{
        try {
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();

            conn.setRequestMethod("HEAD");
            conn.connect();

            int responseCode = conn.getResponseCode();
            long contentSize = conn.getContentLengthLong();

            HttpReturn result = new HttpReturn(responseCode, contentSize);

            return result;

        } catch (IOException ex) {
            throw new ConnectException(ex.getMessage());
        }
    }
    
    private void btn_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_downloadActionPerformed
        // TODO add your handling code here:
//        "http://eztech.com.my/download/xampp-win32-5.6.15-1-VC11-installer.zip"
        LINK = txt_link.getText().trim();
        if(LINK.length() != 0){
            try {
                HttpReturn http = checkURL(new URL(LINK));
            } catch (ConnectException ex) {
                lbl_status.setText("[Error] Invalid link");
                lbl_status.setForeground(Color.red);
            } catch (MalformedURLException ex) {
                lbl_status.setText("[Error] Invalid link");
                lbl_status.setForeground(Color.red);
            }
                    
            btn_download.setEnabled(false);
                    String[] links = {LINK};
                    new Thread(() -> {
                        try {
                            img_loading.setVisible(true);
                            String time_ = null;
                            lbl_status.setText("[Status] Downloading...");
                            lbl_status.setForeground(Color.blue);
                            Instant start = java.time.Instant.now();
                            new Main(links);
                            Instant end = java.time.Instant.now();
                            Duration between = java.time.Duration.between(start, end);
                            time_ = String.valueOf(between.toDays())+" days "+String.valueOf(between.toHours())+
                                    " hours "+String.valueOf(between.toMinutes())+" minutes "+String.valueOf(between.getSeconds())+
                                    " seconds";
                  
                            btn_download.setEnabled(true);
                            lbl_status.setText("[Success] Download is completed. Time taken "+time_);
                            lbl_status.setForeground(Color.blue);
                            img_loading.setVisible(false);
                        } catch (Exception ex) {
                            lbl_status.setText(ex.getMessage());
                            lbl_status.setForeground(Color.red);
                        }
                    }).start();       
        }else{
            lbl_status.setText("[Error] Invalid link");
            lbl_status.setForeground(Color.red);
        }
    }//GEN-LAST:event_btn_downloadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_download;
    private javax.swing.JLabel img_loading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JTextField txt_link;
    // End of variables declaration//GEN-END:variables
}
